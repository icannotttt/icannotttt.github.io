<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vim使用学习（kimi生成 自存）</title>
      <link href="/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/vim%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/vim%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="退出操作">退出操作</h2><p>:wq：保存并退出。<br>:w：保存但不退出。<br>:q!：强制退出而不保存。<br>:qa：退出所有打开的文件。<br>:qa!：强制退出所有打开的文件，不保存任何更改。</p><h2 id="模式切换">模式切换</h2><p>进入插入模式：按 i 键。<br>返回普通模式：按 Esc 键。<br>进入可视模式：按 v 键。<br>进入可视行模式：按 V 键。<br>进入可视块模式：按 Ctrl+v 键。<br>进入命令行模式：按 : 键。</p><h2 id="移动">移动</h2><p>gg：跳到文件的第一行。<br>G：跳到文件的最后一行。<br>nG：跳到文件的第 n 行。<br>0：跳到当前行的行首。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>：跳到当前行的行尾。</mtext><mi>g</mi><mi>g</mi><mn>0</mn><mtext>：跳到文件的第一行的行首。</mtext><mi>G</mi></mrow><annotation encoding="application/x-tex">：跳到当前行的行尾。gg0：跳到文件的第一行的行首。G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">跳</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">尾</span><span class="mord cjk_fallback">。</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">0</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">跳</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">第</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">。</span><span class="mord mathdefault">G</span></span></span></span>：跳到文件的最后一行的行尾。<br>Ctrl+f：向下翻一页。<br>Ctrl+b：向上翻一页。<br>Ctrl+d：向下翻半页。<br>Ctrl+u：向上翻半页。<br>Ctrl+e：向下滚动一行。<br>Ctrl+y：向上滚动一行。</p><h2 id="插入文本">插入文本</h2><p>i：在当前光标位置插入文本。<br>I：在当前行的行首插入文本。<br>a：在当前光标位置的后面插入文本。<br>A：在当前行的行尾插入文本。<br>o：在当前行的下面插入一行。<br>O：在当前行的上面插入一行。</p><h2 id="删除行">删除行</h2><p>dd：删除当前行。<br>ndd：删除从当前行开始的 n 行。<br>d0：删除从当前光标位置到行首的内容。<br>d$：删除从当前光标位置到行尾的内容。</p><h2 id="复制-粘贴">复制 粘贴</h2><p>复制：<br>yy：复制当前行。<br>nyy：复制从当前行开始的 n 行。<br>y0：复制从当前光标位置到行首的内容。<br>y$：复制从当前光标位置到行尾的内容。<br>粘贴：<br>p：在当前光标位置的后面粘贴。<br>P：在当前光标位置的前面粘贴。</p><h2 id="查找和替换">查找和替换</h2><p>查找：<br>/pattern：向下查找匹配 pattern 的内容。<br>?pattern：向上查找匹配 pattern 的内容。<br>n：查找下一个匹配项。<br>N：查找上一个匹配项。<br>替换：<br>:s/old/new/：在当前行替换第一个匹配的 old 为 new。<br>:s/old/new/g：在当前行替换所有匹配的 old 为 new。<br>:%s/old/new/g：在文件中替换所有匹配的 old 为 new。</p><h2 id="撤销和重做">撤销和重做</h2><p>撤销：<br>u：撤销上一次操作。<br>重做：<br>Ctrl+r：重做上一次撤销的操作。</p><h2 id="窗口操作">窗口操作</h2><p>分割窗口：<br>:split 或 :sp：水平分割窗口。<br>:vsplit 或 :vsp：垂直分割窗口。<br>切换窗口：<br>Ctrl+w 然后按方向键（h、j、k、l）：在窗口之间切换。<br>关闭窗口：<br>:close 或 :clo：关闭当前窗口。<br>:only 或 :on：关闭所有其他窗口，只保留当前窗口。</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> shell文本技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>好用的移动端管理软件</title>
      <link href="/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF%E7%AE%A1%E7%90%86/"/>
      <url>/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="termius汉化版本">termius汉化版本</h2><p>可以全平台登录，而且有文件夹查看的形式以及命令行，使用ipad或者手机在外出的时候非常方便，免费版本即可满足需求<br><a href="https://www.alongw.cn/termius">https://www.alongw.cn/termius</a></p><p>以及仅命令行的juicessh软件也挺好用，免费版就行</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一些好用的shell脚本指令</title>
      <link href="/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/%E5%A5%BD%E7%94%A8%E7%9A%84shell%E8%84%9A%E6%9C%AC/"/>
      <url>/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/%E5%A5%BD%E7%94%A8%E7%9A%84shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="删除当前文件夹下除了某些需要的文件之外的所有文件：">删除当前文件夹下除了某些需要的文件之外的所有文件：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;即将删除以下文件：&quot;</span></span><br><span class="line">find . -maxdepth 1 -<span class="built_in">type</span> f ! \( -name <span class="string">&quot;*.sh&quot;</span> -o -name <span class="string">&quot;*.fdf&quot;</span> -o -name <span class="string">&quot;nohup*&quot;</span> \) -<span class="built_in">print</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;确认删除这些文件吗？[y/N] &quot;</span> yn</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$yn</span> <span class="keyword">in</span></span><br><span class="line">    [Yy]* ) find . -maxdepth 1 -<span class="built_in">type</span> f ! \( -name <span class="string">&quot;*.sh&quot;</span> -o -name <span class="string">&quot;*.fdf&quot;</span> -o -name <span class="string">&quot;nohup*&quot;</span> \) -delete</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;文件已删除&quot;</span>;;</span><br><span class="line">    * ) <span class="built_in">echo</span> <span class="string">&quot;取消删除操作&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>推荐一本书：《linux_Shell脚本攻略》第二章命令之乐，看完能够理解shell脚本比我们想象得好用</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> shell文本技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nohup使用学习</title>
      <link href="/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/nohup%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/nohup%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="用nohup提交任务">用nohup提交任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> sh run.sh &amp;</span><br></pre></td></tr></table></figure><h2 id="查看后台实时进程">查看后台实时进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p>也可以，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top |grep <span class="string">&quot;关键词&quot;</span></span><br></pre></td></tr></table></figure><h2 id="查看任务运行文件夹">查看任务运行文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwdx PID</span><br></pre></td></tr></table></figure><h2 id="用pgrep查找nohup放在后台的进程">用pgrep查找nohup放在后台的进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgrep -f <span class="string">&quot;当时提交的命令&quot;</span></span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pgrep -f <span class="string">&quot;runforbasis&quot;</span></span><br><span class="line">367168</span><br><span class="line">3968437</span><br><span class="line">3983626</span><br></pre></td></tr></table></figure><h2 id="杀死任务">杀死任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> PID</span><br></pre></td></tr></table></figure><p>杀死当前用户所有进程，清理后台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#终止所有</span></span><br><span class="line">pkill -9 -u username</span><br><span class="line"><span class="comment">#仅终止python</span></span><br><span class="line">pkill -9 -u usename python</span><br></pre></td></tr></table></figure><p>列举所有siesta的进程号和文件地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgrep -f siesta | <span class="keyword">while</span> <span class="built_in">read</span> pid; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;PID: <span class="variable">$pid</span>&quot;</span>; pwdx <span class="variable">$pid</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>kill特定文件夹下的siesta</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep -f <span class="string">&quot;/home/user/project/siesta&quot;</span> | xargs <span class="built_in">kill</span></span><br><span class="line">pgrep -f <span class="string">&quot;<span class="subst">$(pwd)</span>/siesta&quot;</span> | xargs <span class="built_in">kill</span></span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 提交任务 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一些siesta学习需要的内容</title>
      <link href="/siesta%E5%AD%A6%E4%B9%A0/siesta%E5%AD%A6%E4%B9%A0/"/>
      <url>/siesta%E5%AD%A6%E4%B9%A0/siesta%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="使用教程">使用教程</h2><p>首先贴上<a href="https://docs.siesta-project.org/projects/siesta/en/stable/">siesta学习官网</a>，上面有非常实用的教程，新手必备。</p><h2 id="安装">安装</h2><p>有管理员权限的朋友直接安装官网上的流程安装即可。</p><p>没有管理员权限，但是有网的朋友来说也是非常简单。<br>贴上我使用的教程，感谢知乎上的橙猫，教程简洁凝练，<a href="https://zhuanlan.zhihu.com/p/5881660276">安装教程</a></p><h2 id="学习教程">学习教程</h2><p>首先，不论学习目的是什么，请先按照教程上的流程，布置本地环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitlab.com/siesta-project/documentation/siesta-docs.git</span><br><span class="line"><span class="built_in">cd</span> siesta-docs</span><br><span class="line"><span class="built_in">cd</span> work-files</span><br><span class="line">bash link.sh</span><br></pre></td></tr></table></figure><p>这一步是必须的，必须进入这个地方才能找到教程上的程序</p><h2 id="实用工具">实用工具</h2><p>非常奇怪，看siesta的程序，实际上可使用的工具有很多，但是教程写得让人看不明白，就比如这个画能带图<br>明明已经写了很好的工具：gnuplot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gnubands -F -G -o bandstructure -E 10 -e -20 *.bands</span><br><span class="line">gnuplot --persist -e <span class="string">&quot;set grid&quot;</span> bandstructure.gplot</span><br></pre></td></tr></table></figure><p>可以很快得到能带图。<br>但是放在<br>siesta-5.2.2/siesta/Util<br>这个部分还有相当一部分工具可以使用，却需要自己研究一下，教程里没写。</p><h2 id="赝势下载">赝势下载</h2><p>存一个还在的赝势网站，现在siesta提倡用atom自己生成，说实话对新手来说有点难度<br><a href="https://www.simuneatomistics.com/siesta-toolkit/siesta-pseudos-and-basis-database/#">赝势网站</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> siesta学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一些提交任务需要的指令</title>
      <link href="/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/"/>
      <url>/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>SBATCH系统：</p><h2 id="简单提交任务文件：">简单提交任务文件：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -N 1  #需要节点</span></span><br><span class="line"><span class="comment">#SBATCH -n 32  #需要核数</span></span><br><span class="line"><span class="comment">##SBATCH -w, --nodelist=node[3]  #指定节点</span></span><br><span class="line"><span class="built_in">source</span> INTER环境/oneapi/setvars.sh --force &gt;&gt; /dev/null</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/xx/lib/release/ <span class="comment">#指定库的位置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ulimit</span> -s unlimited <span class="comment">#修改限制</span></span><br><span class="line"><span class="built_in">ulimit</span> -v unlimited  <span class="comment">#修改使用内存限制</span></span><br><span class="line">sh run.sh</span><br></pre></td></tr></table></figure><h2 id="for循环并行提交任务：">for循环并行提交任务：</h2><p>前面都一样<br>如果写了n个任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((count=<span class="number">1</span>; count &lt; max_iterations; count++)); <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sh run_<span class="variable">$&#123;count&#125;</span>.sh</span><br><span class="line">&#125;&amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="sed改变输入文件提交任务">sed改变输入文件提交任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((count=<span class="number">1</span>; count &lt; max_iterations; count++)); <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">shift</span>=$(<span class="built_in">echo</span> <span class="string">&quot;scale=10;100-<span class="variable">$count</span> *2&quot;</span> | bc)</span><br><span class="line">e1=$(grep -n -r PAO.EnergyShift BaTiO3.fdf |  awk <span class="string">&#x27;NR==1&#x27;</span> |awk -F<span class="string">&#x27; &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">sed -i <span class="string">&quot;30s/<span class="variable">$&#123;e1&#125;</span>/<span class="variable">$&#123;shift&#125;</span>/&quot;</span> BaTiO3.fdf</span><br><span class="line">siesta &lt;BaTiO3.fdf &gt;out</span><br><span class="line">&#125;&amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="检查满足条件时跳出循环-退出任务">检查满足条件时跳出循环，退出任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查是否满足条件（示例：d大于0.6，小于1.5时跳出）</span></span><br><span class="line">   <span class="keyword">if</span> [ $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$d</span> &gt;= 0.6 &amp;&amp; <span class="variable">$d</span> &lt;= 1.5&quot;</span> | bc) -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;get out, break&quot;</span></span><br><span class="line">       <span class="built_in">break</span></span><br><span class="line">   <span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="使用虚拟环境提交任务">使用虚拟环境提交任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH -N 1</span></span><br><span class="line"><span class="comment">#SBATCH -n 16</span></span><br><span class="line"><span class="comment">##SBATCH -w, --nodelist=node[3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##清除与进程管理接口（PMI）相关的环境变量，通常用于避免 Intel MPI 和 SLURM 之间的冲突，确保 MPI 程序在 SLURM 下正常运行。</span></span><br><span class="line"><span class="built_in">unset</span> I_MPI_PMI_LIBRARY</span><br><span class="line"><span class="built_in">unset</span> PMI_FD</span><br><span class="line"><span class="built_in">unset</span> PMI_RANK</span><br><span class="line"><span class="built_in">unset</span> PMI_SIZE</span><br><span class="line"></span><br><span class="line"><span class="comment">##静默地（不输出任何信息）加载 Intel oneAPI 的全套环境变量，包括编译器、MPI、MKL 等工具链</span></span><br><span class="line"><span class="built_in">source</span> /public/intel/oneapi/setvars.sh --force &gt;&gt; /dev/null</span><br><span class="line"><span class="comment">##解除限制</span></span><br><span class="line"><span class="built_in">ulimit</span> -s unlimited</span><br><span class="line"></span><br><span class="line"><span class="comment">##激活虚拟环境</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;xx/anaconda3/bin/:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(conda shell.bash hook)</span>&quot;</span></span><br><span class="line">conda activate xx/anaconda3/envs/envname</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试节点是否有问题：">测试节点是否有问题：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/bash</span></span><br><span class="line"><span class="string"># No conflicting #SBATCH directives</span></span><br><span class="line"><span class="string">hostname</span></span><br><span class="line"><span class="string">sleep 10&#x27;</span> &gt; test.sh</span><br><span class="line">sbatch -w node4 --mem=1G test.sh</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 提交任务 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一些linux文本需要的指令</title>
      <link href="/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
      <url>/shell%E6%96%87%E6%9C%AC%E6%8A%80%E5%B7%A7/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>记录一些linux文本需要的指令</p><h2 id="查看特殊字符：">查看特殊字符：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> -A filename</span><br></pre></td></tr></table></figure><h2 id="去掉文件中的m-这个-m用ctrl-v和ctrl-m打出来-：">去掉文件中的M，这个^M用ctrl+V和ctrl+M打出来 ：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/^M//g&#x27;</span> filename</span><br></pre></td></tr></table></figure><h2 id="去掉文件的前三个字符：">去掉文件的前三个字符：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/^...//g&#x27;</span> filename</span><br></pre></td></tr></table></figure><h2 id="提取文件第2行第3量作为变量：">提取文件第2行第3量作为变量：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">third_column=$(awk <span class="string">&#x27;NR==2 &#123;print $3&#125;&#x27;</span> data.txt)</span><br><span class="line">third_column=$(<span class="built_in">cut</span> -d<span class="string">&#x27; &#x27;</span> -f3 data.txt)</span><br></pre></td></tr></table></figure><h2 id="特殊分隔符分割的：">特殊分隔符分割的：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n=2  <span class="comment"># 指定行号</span></span><br><span class="line">delimiter=<span class="string">&quot;;&quot;</span>  <span class="comment"># 指定分隔符</span></span><br><span class="line">third_column=$(awk -v n=<span class="string">&quot;<span class="variable">$n</span>&quot;</span> -v FS=<span class="string">&quot;<span class="variable">$delimiter</span>&quot;</span> <span class="string">&#x27;NR==n &#123;print $3&#125;&#x27;</span> data.txt)</span><br></pre></td></tr></table></figure><h2 id="使用cat和eof输出变量到文件：">使用cat和EOF输出变量到文件：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; output.txt</span></span><br><span class="line"><span class="string">Column 3 value: $third_column</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="bc管道计算的时候小数部分不输出导致格式识别错误-加一个适配格式的0即可：">bc管道计算的时候小数部分不输出导致格式识别错误，加一个适配格式的0即可：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result=$(<span class="built_in">echo</span> <span class="string">&quot;scale=2; 10 / 3+0.00&quot;</span> | bc)</span><br></pre></td></tr></table></figure><h2 id="识别文件夹内的文件名-并创建新文件夹-在新文件夹中进行一些任务">识别文件夹内的文件名，并创建新文件夹，在新文件夹中进行一些任务;</h2><p>示例是一个拉伸的文本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">dir</span>=$(<span class="built_in">pwd</span>)</span><br><span class="line">files=$(<span class="built_in">ls</span> poscar)</span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> <span class="variable">$files</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$dir</span></span><br><span class="line"><span class="built_in">rm</span> -r <span class="variable">$filename</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$filename</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$filename</span></span><br><span class="line"><span class="built_in">mkdir</span> poscar</span><br><span class="line">name1=<span class="variable">$dir</span>/poscar/<span class="variable">$filename</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;<span class="number">6</span>;i+=<span class="number">1</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">name2=POSCAR_<span class="variable">$&#123;i&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$name1</span> <span class="variable">$name2</span></span><br><span class="line">e1=$(sed -n <span class="string">&quot;5 p&quot;</span> <span class="variable">$name2</span>  |awk -F<span class="string">&#x27; &#x27;</span> <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$e1</span></span><br><span class="line">e1_1=$(<span class="built_in">echo</span> <span class="string">&quot;scale=10; (0+ 0.985+ <span class="variable">$&#123;i&#125;</span>*0.005)  *<span class="variable">$&#123;e1&#125;</span> &quot;</span> | bc)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$e1_1</span></span><br><span class="line">sed -i <span class="string">&quot;5s/<span class="variable">$&#123;e1&#125;</span>/<span class="variable">$&#123;e1_1&#125;</span>/&quot;</span> <span class="variable">$name2</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> shell文本技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>加密文章</title>
      <link href="/%E6%B5%8B%E8%AF%95/secret/"/>
      <url>/%E6%B5%8B%E8%AF%95/secret/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ea001725f11ee473486bcca2fdf0e8385f8341c3d9d0e510fdc26538e60aca78">d477c8ba007a8acd2dab137c41330f6464c23d8d249f14e9fc2c9cc14648a0e2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭站笔记记录</title>
      <link href="/%E6%B5%8B%E8%AF%95/test/"/>
      <url>/%E6%B5%8B%E8%AF%95/test/</url>
      
        <content type="html"><![CDATA[<p>大家好，本页的功能仅供测试<br>这是行内公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。<br>本次博客搭站基于github，主要参考网站:<a href="https://zhuanlan.zhihu.com/p/392994381">https://zhuanlan.zhihu.com/p/392994381</a><br>仅记录自己的搭站心得<br>主题为：<a href="https://probberechts.github.io/hexo-theme-cactus/">https://probberechts.github.io/hexo-theme-cactus/</a></p><p>插入图测试<br><img src="/img/touxiang.jpg" alt="插入头像试试" title="甘雨"></p><h2 id="添加评论过程如图：">添加评论过程如图：</h2><p><img src="/pinglun/1.png" alt="1" title="1"><br><img src="/pinglun/2.png" alt="2" title="2"><br><img src="/pinglun/3.png" alt="3" title="3"><br><img src="/pinglun/4.png" alt="4" title="4"><br><img src="/pinglun/5.png" alt="5" title="5"><br><img src="/pinglun/6.png" alt="6" title="6"><br>livere官网：<a href="https://www.livere.com/">https://www.livere.com/</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/uncategorized/hello-world/"/>
      <url>/uncategorized/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
